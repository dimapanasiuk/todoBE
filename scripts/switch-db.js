#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É –ª–æ–∫–∞–ª—å–Ω–æ–π –∏ —É–¥–∞–ª–µ–Ω–Ω–æ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node scripts/switch-db.js [local|remote]
 */

const fs = require('fs');
const path = require('path');

const envPath = path.join(__dirname, '..', '.env');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å—Ä–µ–¥
const configs = {
  local: {
    NODE_ENV: 'development',
    DB_HOST: 'localhost',
    DB_PORT: '5432',
    DB_NAME: 'todo',
    DB_USER: 'postgres',
    DB_PASSWORD: '0000',
    // DB_SSL –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ–º –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π –±–∞–∑—ã
  },
  remote: {
    NODE_ENV: 'development',
    DB_HOST: 'dpg-d2u7d5ffte5s73at41gg-a.oregon-postgres.render.com',
    DB_PORT: '5432',
    DB_NAME: 'todo_i2ce',
    DB_USER: 'todo_i2ce_user',
    DB_PASSWORD: 'bKvXNHlTowxF3c6pMMssEdt3vknD298g',
    DB_SSL: 'true',
  }
};

// JWT —Å–µ–∫—Ä–µ—Ç—ã (–æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥–ª—è –≤—Å–µ—Ö —Å—Ä–µ–¥)
const jwtSecrets = {
  JWT_SECRET: '810faf7d47f35fb297dcc846537c94621d4157cf57c99d755dc839bcbfde7815e82f5d453a357f17806ac45c2b27ab3f1d98b853ab1ee862bbfddb34657d8cd9',
  JWT_REFRESH_SECRET: 'c14a38fffebba2325c55bedec55e0ebcd5fb7c5f4c5f42cb9077410e583df26b7b4b9f32787963d9266c7e3c0e2e47c0a54e5c0e46794c0f432a1b438e0dcee6'
};

// –û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
const commonSettings = {
  PORT: '5000',
  CORS_ORIGIN: 'http://localhost:3001'
};

function createEnvFile(config) {
  // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π .env —Ñ–∞–π–ª
  const envSections = [
    '# –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
    `NODE_ENV=${config.NODE_ENV}`,
    '',
    '# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö',
    `DB_HOST=${config.DB_HOST}`,
    `DB_PORT=${config.DB_PORT}`,
    `DB_NAME=${config.DB_NAME}`,
    `DB_USER=${config.DB_USER}`,
    `DB_PASSWORD=${config.DB_PASSWORD}`,
    config.DB_SSL ? `DB_SSL=${config.DB_SSL}` : '',
    '',
    '# JWT –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
    `JWT_SECRET=${jwtSecrets.JWT_SECRET}`,
    `JWT_REFRESH_SECRET=${jwtSecrets.JWT_REFRESH_SECRET}`,
    '',
    '# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞',
    `PORT=${commonSettings.PORT}`,
    '',
    '# CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
    `CORS_ORIGIN=${commonSettings.CORS_ORIGIN}`
  ];

  // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
  const envContent = envSections.filter(line => line !== '').join('\n') + '\n';

  fs.writeFileSync(envPath, envContent);
  
  const dbType = config === configs.local ? '–ª–æ–∫–∞–ª—å–Ω–æ–π' : '—É–¥–∞–ª–µ–Ω–Ω–æ–π (render.com)';
  console.log(`‚úÖ .env —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è ${dbType} –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö`);
}

function showUsage() {
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:');
  console.log('  node scripts/switch-db.js local   - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö');
  console.log('  node scripts/switch-db.js remote  - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (render.com)');
  console.log('');
  console.log('–ü—Ä–∏–º–µ—Ä—ã:');
  console.log('  node scripts/switch-db.js local');
  console.log('  node scripts/switch-db.js remote');
}

function main() {
  const args = process.argv.slice(2);
  
  if (args.length === 0) {
    console.log('‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã');
    showUsage();
    process.exit(1);
  }

  const mode = args[0].toLowerCase();

  console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

  if (mode === 'local') {
    createEnvFile(configs.local);
    console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏:');
    console.log('   1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö:');
    console.log('      docker build -f Dockerfile.db -t todo-db .');
    console.log('      docker run -p 5432:5432 todo-db');
    console.log('   2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ):');
    console.log('      npm run init-db');
    console.log('   3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:');
    console.log('      npm run dev');
  } else if (mode === 'remote') {
    createEnvFile(configs.remote);
    console.log('\nüìù –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (render.com):');
    console.log('   ‚úÖ –•–æ—Å—Ç: dpg-d2u7d5ffte5s73at41gg-a.oregon-postgres.render.com');
    console.log('   ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: todo_i2ce');
    console.log('   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: todo_i2ce_user');
    console.log('   ‚úÖ SSL: –≤–∫–ª—é—á–µ–Ω');
    console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:');
    console.log('   npm run dev');
  } else {
    console.log(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: ${mode}`);
    showUsage();
    process.exit(1);
  }

  console.log('\nüí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:');
  console.log('   npm run db:local  - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é –ë–î');
  console.log('   npm run db:remote - –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω—É—é –ë–î');
}

main();
